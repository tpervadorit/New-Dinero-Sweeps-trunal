{
    "sourceFile": "frontend/src/components/tickets/components/index.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754364715335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754364715335,
            "name": "Commit-0",
            "content": "'use client';\r\nimport { noDataTickit } from '@/assets/png';\r\nimport { chevronLeft, cross, tickets } from '@/assets/svg';\r\nimport { Button } from '@/components/ui/button';\r\nimport Image from 'next/image';\r\nimport React from 'react';\r\nimport useTicket from '../hook/useTicket';\r\n// import CustomSelect from '@/common/components/custom-select';\r\n// import { selectOptions } from '../constant';\r\n// import { Input } from '@/components/ui/input';\r\n// import { Textarea } from '@/components/ui/textarea';\r\nimport CreateTicket from './create-ticket';\r\nimport { isEmpty } from '@/lib/utils';\r\nimport TicketMessage from './ticket-message';\r\n\r\nconst Tickets = () => {\r\n  const {\r\n    createTicket,\r\n    handleClick,\r\n    handleClose,\r\n    // dataLoading,\r\n    ticketData,\r\n    formatDate,\r\n    handleTicketMessage,\r\n    isTicketMessageOpen,\r\n    ticketId,\r\n    t,\r\n  } = useTicket();\r\n\r\n  return (\r\n    <div className=\"bg-[hsl(var(--main-background))] pb-5\">\r\n      <div className=\"font-bold text-2xl h-16 flex  justify-between items-center  my-6\">\r\n        {(createTicket || isTicketMessageOpen) && (\r\n          <button\r\n            onClick={() => {\r\n              // eslint-disable-next-line no-unused-expressions\r\n              isTicketMessageOpen ? handleTicketMessage(null) : handleClick();\r\n            }}\r\n            className=\"text-white  flex items-center mx-3 hover:bg-transparent\"\r\n          >\r\n            <Image src={chevronLeft} alt=\"back\" />\r\n            {t('back')}\r\n          </button>\r\n        )}\r\n        <div className=\"flex mx-6\">\r\n          <Image src={tickets} alt=\"tickets\" />\r\n          <h1 className=\"font-bold text-2xl mx-3\"> {t('tickets')} </h1>\r\n        </div>\r\n        <Image\r\n          src={cross}\r\n          alt=\"close icon\"\r\n          onClick={handleClose}\r\n          className=\"invert hover:bg-gray-500 rounded-xl mx-6\"\r\n        />\r\n      </div>\r\n      <div className=\"w-[95%] mx-auto py-5 bg-[rgb(var(--lb-blue-800))] rounded-sm\">\r\n        <div\r\n          className={`w-[93%] mx-auto ${isTicketMessageOpen ? '' : 'border border-dotted border-white'}  flex items-center justify-center flex-col pb-3 rounded-sm`}\r\n        >\r\n          {!isTicketMessageOpen ? (\r\n            createTicket ? (\r\n              <CreateTicket handleClick={handleClick} />\r\n            ) : (\r\n              <>\r\n                {isEmpty(ticketData) ? (\r\n                  <div className=\"flex justify-center flex-col\">\r\n                    <Image\r\n                      src={noDataTickit}\r\n                      alt=\"no Data Ticket\"\r\n                      height={180}\r\n                      width={180}\r\n                    />\r\n                    <p className=\"py-2 text-[rgb(var(--lb-blue-200))]\">\r\n                      {t('youDontHaveOpenTickets')}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"w-[100%] px-2 py-2 mb-2\">\r\n                    <div className=\"flex justify-between border-b border-dotted border-white mb-2 p-3\">\r\n                      <div className=\"font-bold text-base text-[rgb(var(--lb-blue-200))]\">\r\n                        <p>{t('title')}</p>\r\n                      </div>\r\n                      <div className=\"font-bold text-base text-[rgb(var(--lb-blue-200))]\">\r\n                        <p>{t('status')}</p>\r\n                      </div>\r\n                    </div>\r\n                    {ticketData?.map((ticket) => (\r\n                      <div\r\n                        key={ticket?.id}\r\n                        className=\"flex justify-between items-center text-[rgb(var(--lb-blue-200))] border-b border-dotted border-white mb-2\"\r\n                      >\r\n                        <div\r\n                          className=\"cursor-pointer\"\r\n                          onClick={() => handleTicketMessage(ticket?.id)}\r\n                        >\r\n                          <div\r\n                            className={`gap-2 ${ticket.status === 'closed' ? '' : 'text-green-400'}`}\r\n                          >\r\n                            <span> #[{ticket.id}]</span>\r\n                            <span> {ticket.subject} </span>\r\n                          </div>\r\n                          <div>{formatDate(ticket.createdAt)}</div>\r\n                        </div>\r\n                        <div>{ticket.status}</div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                <Button\r\n                  onClick={handleClick}\r\n                  className=\"bg-green-400 p-5 hover:bg-green-300 cursor-pointer font-bold text-black\"\r\n                >\r\n                  {t('createNewTicket')}\r\n                </Button>\r\n              </>\r\n            )\r\n          ) : (\r\n            <TicketMessage ticketId={ticketId} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tickets;\r\n"
        }
    ]
}