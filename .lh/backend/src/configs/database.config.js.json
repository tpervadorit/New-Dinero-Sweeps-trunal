{
    "sourceFile": "backend/src/configs/database.config.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1753935395533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753935459846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,8 @@\n       host: config.get('sequelize.writeHost'),\n       port: config.get('sequelize.port')\n     }\n   },\n-  // logging: (logs) => Logger.info(`database query :: ${logs}`),\n   pool: {\n     max: 30,\n     min: 0,\n     acquire: 60000,\n@@ -52,5 +51,5 @@\n     ...dbSettings\n   }\n }[config.get('env')]\n \n-module.exports = databaseOptions\n+export default databaseOptions\n"
                },
                {
                    "date": 1753947959256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,13 @@\n     idle: 5000\n   },\n   dialect: 'postgres',\n   dialectOptions: {\n-    application_name: config.get('app.name')\n+    application_name: config.get('app.name'),\n+    ssl: {\n+      require: true,\n+      rejectUnauthorized: false\n+    }\n   },\n   migrationStorage: 'sequelize',\n   migrationStorageTableName: 'sequelize_migration_meta',\n   seederStorage: 'sequelize',\n"
                }
            ],
            "date": 1753935395533,
            "name": "Commit-0",
            "content": "// import { Logger } from '@src/libs/logger'\nimport config from './app.config'\n\nconst dbSettings = {\n  database: config.get('sequelize.name'),\n  replication: {\n    read: [{\n      username: config.get('sequelize.user'),\n      password: config.get('sequelize.password'),\n      host: config.get('sequelize.readHost'),\n      port: config.get('sequelize.port')\n    }],\n    write: {\n      username: config.get('sequelize.user'),\n      password: config.get('sequelize.password'),\n      host: config.get('sequelize.writeHost'),\n      port: config.get('sequelize.port')\n    }\n  },\n  // logging: (logs) => Logger.info(`database query :: ${logs}`),\n  pool: {\n    max: 30,\n    min: 0,\n    acquire: 60000,\n    idle: 5000\n  },\n  dialect: 'postgres',\n  dialectOptions: {\n    application_name: config.get('app.name')\n  },\n  migrationStorage: 'sequelize',\n  migrationStorageTableName: 'sequelize_migration_meta',\n  seederStorage: 'sequelize',\n  seederStorageTableName: 'sequelize_seed_meta',\n  define: {\n    underscored: true,\n    timestamps: true\n  }\n}\n\nconst databaseOptions = {\n  development: {\n    ...dbSettings\n  },\n  test: {\n    ...dbSettings\n  },\n  staging: {\n    ...dbSettings\n  },\n  production: {\n    ...dbSettings\n  }\n}[config.get('env')]\n\nmodule.exports = databaseOptions\n"
        }
    ]
}